{"version":3,"sources":["components/MiniGroup.jsx","components/DataLoader.js","assets/global/lfmSprite.jpg","assets/global/server.svg","components/CanvasLfmPanel.jsx","assets/global/settings.svg","assets/global/notification.svg","assets/global/fullscreen.svg","assets/global/fullscreen-exit.svg","components/LfmFilterBar.jsx","components/LevelRangeSlider.jsx","components/Group.jsx","components/GroupingSpecific.jsx"],"names":["MiniGroup","props","className","to","server","style","textDecoration","color","fontWeight","fontSize","questName","leaderName","memberCount","fetchArbitraryData","url","type","a","fetch","response","json","text","Fetch","timeout","ret","Promise","resolve","reject","setTimeout","isResolved","then","val","catch","console","log","VerifyLfmData","data","length","missingfields","forEach","undefined","Name","LastUpdateTime","Groups","GroupCount","module","exports","_path","_path2","CanvasLfmPanel","canvasRef","React","useRef","spriteRef","useState","isImageLoaded","set_isImageLoaded","groupIndex","cursorPosition","groupSelection","set_groupSelection","HandleMouseOnCanvas","e","rect","target","getBoundingClientRect","x","clientX","left","width","y","clientY","top","index","Math","floor","useEffect","overlayTimeout","current","addEventListener","clearTimeout","canvas","ctx","getContext","sprite","drawImage","adjustedGroupCount","i","DrawFiller","filter","group","Eligible","showNotEligible","gradient","createLinearGradient","addColorStop","highVisibility","fillStyle","fillRect","beginPath","strokeStyle","lineWidth","stroke","moveTo","lineTo","textBaseline","font","fontModifier","textAlign","fillText","Leader","leaderWidth","measureText","startsWith","TotalLevel","MinimumLevel","MaximumLevel","Members","Quest","textLines","wrapText","slice","Difficulty","raceIconBounds","getRaceIconPosition","Gender","Race","hasOwnProperty","AcceptedCount","AcceptedClasses","playerclass","classIconPosition","getClassIconPosition","Comment","AdventureActive","min","estimatedBottom","height","memberList","member","grad","raceIconPosition","memberWidth","Location","Classes","c","xp","yp","Level","DrawPlayerOverlay","DrawLfms","maxWidth","words","split","lines","currentLine","word","push","race","eligible","xsrc","ysrc","classname","timestamp","display","justifyContent","flexDirection","ref","src","PanelSprite","onLoad","children","backgroundColor","_excluded","_extends","Object","assign","arguments","source","key","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_g","_ref","svgRef","title","createElement","viewBox","d","fill","ForwardRef","forwardRef","enableBackground","LfmFilterBar","fullscreen","set_fullscreen","useHistory","position","paddingRight","currentServer","marginLeft","onClick","handleFilterButton","sliderStyle","Handle","handle","id","value","percent","getHandleProps","marginTop","Track","getTrackProps","LevelRangeSlider","rootStyle","domain","step","mode","values","minimumLevel","maximumLevel","onChange","handleChange","getRailProps","handles","map","right","tracks","Group","classnames","Short","GetShortName","cls","shortname","obj","handleClick","expanded","gap","serverNames","GroupingSpecific","set_currentServer","groupDataMaster","set_groupDataMaster","groupDataServer","set_groupDataServer","groupCount","set_groupCount","set_adjustedGroupCount","serverStatusData","set_serverStatusData","eligibleCount","set_eligibleCount","attemptedServerStatusFetch","set_attemptedServerStatusFetch","attemptedGroupDataFetch","set_attemptedGroupDataFetch","lastFetchTime","set_lastFetchTime","set_fontModifier","set_highVisibility","filterPanelVisible","set_filterPanelVisible","classicLook","set_classicLook","theme","set_theme","expandedGroups","set_expandedGroups","set_minimumLevel","set_maximumLevel","set_showNotEligible","sortAscending","set_sortAscending","difficulty","IsExpanded","g","localStorage","getItem","minlevel","maxlevel","shownoteligible","sortascending","classiclook","highvisibility","fontmodifier","failedAttemptCount","FetchLfmData","Date","now","set_popupMessages","popupMessages","message","icon","reportMessage","refreshdata","setInterval","clearInterval","Worlds","Status","specialComment","serverData","world","ServerName","total","toLowerCase","serverdata","levelpass","sort","b","eligiblegroupcount","adjustedCount","max","location","useLocation","pathname","substring","lastIndexOf","serverName","toUpperCase","includes","reportFormVisibility","setReportFormVisibility","reportFormReference","setReportFormReference","showReportForm","reference","referenceInfo","chartType","displayType","trendType","showActions","precomment","Helmet","name","content","ReportIssueForm","page","showLink","visibility","componentReference","hideReportForm","PopupMessage","messages","popMessage","newMessages","Card","pageName","hideTitleOnMobile","subtitle","reportReference","alignItems","padding","marginBottom","setItem","checked","document","body","classList","replace","ToggleTheme"],"mappings":"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","file":"static/js/12.4ce0f0c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MiniGroup = (props) => {\r\n    return (\r\n        <Link\r\n            className=\"mini-group\"\r\n            to={\"/grouping/\" + props.server}\r\n            style={{\r\n                textDecoration: \"none\",\r\n                color: \"var(--text)\",\r\n            }}\r\n        >\r\n            <h5 style={{ fontWeight: \"bold\" }}>{props.server}</h5>\r\n            <span className=\"lfm-number\" style={{ fontSize: \"larger\" }}>\r\n                {props.questName}\r\n            </span>\r\n            <span style={{ fontSize: \"large\" }}>\r\n                {props.leaderName}, {props.memberCount + 1} member\r\n                {props.memberCount + 1 > 1 ? \"s\" : \"\"}\r\n            </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default MiniGroup;\r\n","async function fetchArbitraryData(url, type) {\r\n    let response = await fetch(url);\r\n    if (type === \"json\") response = await response.json();\r\n    else if (type === \"text\") response = await response.text();\r\n    return response;\r\n}\r\n\r\nexport async function Fetch(url, timeout) {\r\n    let ret = new Promise(async (resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (!ret.isResolved) {\r\n                reject();\r\n            }\r\n        }, timeout);\r\n\r\n        await fetchArbitraryData(url, \"json\")\r\n            .then((val) => {\r\n                resolve(val);\r\n            })\r\n            .catch((val) => {\r\n                console.log(\"Failed to fetch group data\");\r\n            });\r\n    });\r\n    return ret;\r\n}\r\n\r\nexport function VerifyLfmData(data) {\r\n    if (data === null) return false;\r\n    if (data.length !== 9) return false;\r\n    let missingfields = false;\r\n    data.forEach((server) => {\r\n        if (server.Name === undefined) missingfields = true;\r\n        if (server.LastUpdateTime === undefined) missingfields = true;\r\n        if (server.Groups === undefined) missingfields = true;\r\n        if (server.GroupCount === undefined) missingfields = true;\r\n    });\r\n    if (missingfields) return false;\r\n    return true;\r\n}\r\n\r\n// export default run;\r\n","module.exports = __webpack_public_path__ + \"static/media/lfmSprite.fa90fc5e.jpg\";","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgServer = function SvgServer(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\",\n    fill: \"#fff\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgServer, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/server.19b98825.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport PanelSprite from \"../assets/global/lfmSprite.jpg\";\r\n\r\nconst CanvasLfmPanel = (props) => {\r\n    // Assume that incoming props.data is already filtered according to user preferences\r\n    const canvasRef = React.useRef(null);\r\n    const spriteRef = React.useRef(null);\r\n\r\n    var [isImageLoaded, set_isImageLoaded] = React.useState(false);\r\n    // var [selectedGroupIndex, set_selectedGroupIndex] = React.useState(-1);\r\n    // var [cursorPosition, set_cursorPosition] = React.useState([0, 0]);\r\n    var [groupSelection, set_groupSelection] = React.useState({\r\n        groupIndex: -1,\r\n        cursorPosition: [0, 0],\r\n    });\r\n\r\n    const panelWidth = 848;\r\n    const lfmHeight = 90;\r\n    const classCount = 15;\r\n\r\n    function HandleMouseOnCanvas(e) {\r\n        var rect = e.target.getBoundingClientRect();\r\n        var x = (e.clientX - rect.left) * (848 / rect.width); //x position within the element.\r\n        var y = (e.clientY - rect.top) * (848 / rect.width); //y position within the element.\r\n\r\n        if (x > 605) {\r\n            // 375 border between group and quest\r\n            set_groupSelection({ ...groupSelection, groupIndex: -1 });\r\n            // drawPanel();\r\n            return;\r\n        }\r\n        if (x < 30) {\r\n            set_groupSelection({ ...groupSelection, groupIndex: -1 });\r\n            // drawPanel();\r\n            return;\r\n        }\r\n\r\n        let index = Math.floor((y - 72) / 89);\r\n        // if (groupSelection.groupIndex === index) {\r\n        //     if (x < 375 && lastSide === \"left\") return;\r\n        //     else if (x > 375 && lastSide === \"right\") return;\r\n        // }\r\n\r\n        // if (x < 375) lastSide = \"left\";\r\n        // else if (x > 375) lastSide = \"right\";\r\n\r\n        set_groupSelection({\r\n            groupIndex: index,\r\n            cursorPosition: [x, y],\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        var overlayTimeout;\r\n        canvasRef.current.addEventListener(\"mousemove\", (e) => {\r\n            clearTimeout(overlayTimeout);\r\n            overlayTimeout = setTimeout(() => {\r\n                HandleMouseOnCanvas(e);\r\n            }, 300);\r\n        });\r\n        canvasRef.current.addEventListener(\"click\", (e) => {\r\n            HandleMouseOnCanvas(e);\r\n        });\r\n        canvasRef.current.addEventListener(\"mouseleave\", () => {\r\n            clearTimeout(overlayTimeout);\r\n            set_groupSelection({ ...groupSelection, groupIndex: -1 });\r\n        });\r\n    }, [canvasRef]);\r\n\r\n    React.useEffect(() => {\r\n        if (!isImageLoaded) {\r\n            console.log(\"Waiting on resources\");\r\n            return;\r\n        }\r\n        // Render canvas\r\n        // console.log(\"render\");\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        const sprite = spriteRef.current;\r\n\r\n        // Draw the header\r\n        OpenPanel();\r\n\r\n        // Draw the chin\r\n        ClosePanel();\r\n\r\n        // Draw lfms\r\n        DrawFiller();\r\n        if (props.data.data !== null) DrawLfms();\r\n\r\n        // Draws the header and the lastUpdateTime string\r\n        function OpenPanel() {\r\n            ctx.drawImage(sprite, 0, 0, 848, 72, 0, 0, 848, 72);\r\n        }\r\n\r\n        // Draws the chin\r\n        function ClosePanel() {\r\n            ctx.drawImage(\r\n                sprite,\r\n                0,\r\n                162,\r\n                848,\r\n                27,\r\n                0,\r\n                72 + props.adjustedGroupCount * lfmHeight,\r\n                848,\r\n                27\r\n            );\r\n        }\r\n\r\n        // Draws filler\r\n        function DrawFiller() {\r\n            for (\r\n                let i = 0;\r\n                i <\r\n                (props.adjustedGroupCount === null\r\n                    ? 4\r\n                    : props.adjustedGroupCount);\r\n                i++\r\n            ) {\r\n                ctx.drawImage(\r\n                    sprite,\r\n                    0,\r\n                    72,\r\n                    848,\r\n                    lfmHeight,\r\n                    0,\r\n                    72 + i * lfmHeight,\r\n                    848,\r\n                    lfmHeight\r\n                );\r\n            }\r\n        }\r\n\r\n        function DrawLfms() {\r\n            if (props.data.data === null) {\r\n                console.log(\"Waiting on data\");\r\n                return;\r\n            }\r\n            props.data.data.Groups.filter((group) => {\r\n                return group.Eligible || props.showNotEligible;\r\n            }).forEach((group, index) => {\r\n                // Draw background and borders\r\n                if (group.Eligible) {\r\n                    let gradient = ctx.createLinearGradient(\r\n                        0,\r\n                        72 + index * lfmHeight,\r\n                        0,\r\n                        72 + (index + 1) * lfmHeight\r\n                    );\r\n                    gradient.addColorStop(\r\n                        0,\r\n                        props.highVisibility ? \"#30301e\" : \"#3b3b25\"\r\n                    );\r\n                    gradient.addColorStop(\r\n                        0.25,\r\n                        props.highVisibility ? \"#42402a\" : \"#4c4a31\"\r\n                    );\r\n                    gradient.addColorStop(\r\n                        0.75,\r\n                        props.highVisibility ? \"#42402a\" : \"#4c4a31\"\r\n                    );\r\n                    gradient.addColorStop(\r\n                        1,\r\n                        props.highVisibility ? \"#30301e\" : \"#3b3b25\"\r\n                    );\r\n\r\n                    ctx.fillStyle = gradient;\r\n                } else {\r\n                    ctx.fillStyle = \"#150a06\";\r\n                }\r\n                ctx.fillRect(26, 73 + lfmHeight * index, 802, lfmHeight);\r\n\r\n                ctx.beginPath();\r\n                ctx.strokeStyle = \"#8f8d74\";\r\n                ctx.lineWidth = 1;\r\n                ctx.rect(26, 73 + lfmHeight * index, 802, lfmHeight);\r\n                ctx.stroke();\r\n\r\n                ctx.moveTo(375, 73 + lfmHeight * index);\r\n                ctx.lineTo(375, 73 + lfmHeight * index + lfmHeight);\r\n                ctx.stroke();\r\n\r\n                ctx.moveTo(605, 73 + lfmHeight * index);\r\n                ctx.lineTo(605, 73 + lfmHeight * index + lfmHeight);\r\n                ctx.stroke();\r\n\r\n                ctx.moveTo(742, 73 + lfmHeight * index);\r\n                ctx.lineTo(742, 73 + lfmHeight * index + lfmHeight);\r\n                ctx.stroke();\r\n\r\n                // Draw party leader's name\r\n                ctx.fillStyle = props.highVisibility\r\n                    ? \"white\"\r\n                    : group.Eligible\r\n                    ? \"#f6f1d3\"\r\n                    : \"#988f80\";\r\n                ctx.textBaseline = \"alphabetic\";\r\n                ctx.font = `${18 + props.fontModifier}px 'Trebuchet MS'`;\r\n                ctx.textAlign = \"left\";\r\n                ctx.fillText(\r\n                    group.Leader.Name,\r\n                    49,\r\n                    73 + lfmHeight * index + 18 + props.fontModifier / 2\r\n                );\r\n                var leaderWidth = ctx.measureText(group.Leader.Name).width;\r\n                if (group.Leader.Name.startsWith(\"Clemei\")) {\r\n                    leaderWidth += 22;\r\n                    ctx.drawImage(\r\n                        sprite,\r\n                        728,\r\n                        189,\r\n                        18,\r\n                        18,\r\n                        49 + leaderWidth - 20,\r\n                        58 + lfmHeight * index + 18,\r\n                        18,\r\n                        18\r\n                    );\r\n                }\r\n\r\n                // Draw party leader's level\r\n                ctx.textAlign = \"center\";\r\n                ctx.font = `${15 + props.fontModifier}px Arial`;\r\n                ctx.fillText(\r\n                    group.Leader.TotalLevel ||\r\n                        (group.Leader.Name === \"DDO Audit\" ? \"99\" : \"0\"),\r\n                    360,\r\n                    90 + lfmHeight * index + props.fontModifier / 2\r\n                );\r\n\r\n                // Draw level range\r\n                ctx.textBaseline = \"middle\";\r\n                ctx.font = `${16 + props.fontModifier}px Arial`;\r\n                ctx.fillText(\r\n                    (group.MinimumLevel || \"1\") +\r\n                        \" - \" +\r\n                        (group.MaximumLevel || \"30\"),\r\n                    786,\r\n                    117 + lfmHeight * index\r\n                );\r\n                ctx.textBaseline = \"alphabetic\";\r\n\r\n                // Draw member count\r\n                if (group.Members) {\r\n                    if (group.Members.length > 0) {\r\n                        ctx.fillStyle = props.highVisibility\r\n                            ? \"white\"\r\n                            : group.Eligible\r\n                            ? \"#b6b193\"\r\n                            : \"#95927e\";\r\n                        ctx.textAlign = \"left\";\r\n                        ctx.fillText(\r\n                            \"(\" + (group.Members.length + 1) + \" members)\",\r\n                            49 + leaderWidth + 4,\r\n                            73 + lfmHeight * index + 18 + props.fontModifier / 2\r\n                        );\r\n                    }\r\n                }\r\n\r\n                // Draw quest\r\n                if (group.Quest != null) {\r\n                    ctx.fillStyle = props.highVisibility\r\n                        ? \"white\"\r\n                        : group.Eligible\r\n                        ? \"#f6f1d3\"\r\n                        : \"#988f80\";\r\n                    ctx.font = `${18 + props.fontModifier}px Arial`;\r\n                    ctx.textAlign = \"center\";\r\n                    let textLines = wrapText(group.Quest.Name, 220);\r\n                    if (textLines.length > 2 && props.fontModifier > 0) {\r\n                        textLines = textLines.slice(0, 2);\r\n                        textLines[1] = textLines[1] + \"...\";\r\n                    }\r\n                    for (let i = 0; i < textLines.length; i++) {\r\n                        ctx.fillText(\r\n                            textLines[i],\r\n                            489,\r\n                            120 +\r\n                                lfmHeight * index -\r\n                                (textLines.length -\r\n                                    1 +\r\n                                    (group.Difficulty.length > 3 ? 1 : 0)) *\r\n                                    9 +\r\n                                i * (19 + props.fontModifier)\r\n                        );\r\n                    }\r\n                    ctx.fillStyle = props.highVisibility\r\n                        ? \"white\"\r\n                        : group.Eligible\r\n                        ? \"#b6b193\"\r\n                        : \"#95927e\";\r\n                    ctx.font = `${14 + props.fontModifier}px Arial`;\r\n                    ctx.fillText(\r\n                        \"(\" + group.Difficulty + \")\",\r\n                        489,\r\n                        123 +\r\n                            lfmHeight * index -\r\n                            (textLines.length -\r\n                                1 +\r\n                                (group.Difficulty.length > 3 ? 1 : 0)) *\r\n                                9 +\r\n                            textLines.length * 19 +\r\n                            props.fontModifier\r\n                    );\r\n                }\r\n\r\n                // Draw race icon\r\n                let raceIconBounds = getRaceIconPosition(\r\n                    group.Leader.Gender + \" \" + group.Leader.Race,\r\n                    group.Eligible\r\n                );\r\n                ctx.drawImage(\r\n                    sprite,\r\n                    raceIconBounds[0],\r\n                    raceIconBounds[1],\r\n                    18,\r\n                    18,\r\n                    28,\r\n                    73 + lfmHeight * index + 3,\r\n                    18,\r\n                    18\r\n                );\r\n\r\n                // Draw class array\r\n                if (!group.hasOwnProperty(\"AcceptedCount\")) {\r\n                    ctx.drawImage(\r\n                        sprite,\r\n                        group.Eligible ? 287 : 390,\r\n                        189,\r\n                        102,\r\n                        60,\r\n                        608,\r\n                        77 + index * lfmHeight,\r\n                        102,\r\n                        60\r\n                    );\r\n                } else {\r\n                    if (group.AcceptedCount === classCount) {\r\n                        ctx.drawImage(\r\n                            sprite,\r\n                            group.Eligible ? 287 : 390,\r\n                            189,\r\n                            102,\r\n                            60,\r\n                            608,\r\n                            77 + index * lfmHeight,\r\n                            102,\r\n                            60\r\n                        );\r\n                    } else {\r\n                        group.AcceptedClasses.forEach((playerclass, i) => {\r\n                            let classIconPosition = getClassIconPosition(\r\n                                playerclass,\r\n                                group.Eligible\r\n                            );\r\n                            ctx.drawImage(\r\n                                sprite,\r\n                                classIconPosition[0],\r\n                                classIconPosition[1],\r\n                                18,\r\n                                18,\r\n                                608 + (i % 5) * 21,\r\n                                77 + index * lfmHeight + Math.floor(i / 5) * 21,\r\n                                18,\r\n                                18\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Draw comment\r\n                ctx.fillStyle = props.highVisibility\r\n                    ? \"white\"\r\n                    : group.Eligible\r\n                    ? \"#bfbfbf\"\r\n                    : \"#7f7472\";\r\n                ctx.font = `${15 + props.fontModifier}px Arial`;\r\n                ctx.textAlign = \"left\";\r\n                let textLines = wrapText(group.Comment, 330);\r\n                if (\r\n                    group.AdventureActive !== 0 &&\r\n                    group.AdventureActive !== undefined\r\n                ) {\r\n                    if (\r\n                        textLines.length > 2 ||\r\n                        (textLines.length > 1 && props.fontModifier > 0)\r\n                    ) {\r\n                        textLines = textLines.slice(0, 1);\r\n                        textLines[textLines.length - 1] =\r\n                            textLines[textLines.length - 1] + \"...\";\r\n                    }\r\n                } else {\r\n                    if (textLines.length > 2 && props.fontModifier > 0) {\r\n                        textLines = textLines.slice(0, 2);\r\n                        textLines[textLines.length - 1] =\r\n                            textLines[textLines.length - 1] + \"...\";\r\n                    } else if (textLines.length > 3) {\r\n                        textLines = textLines.slice(0, 2);\r\n                        textLines[textLines.length - 1] =\r\n                            textLines[textLines.length - 1] + \"...\";\r\n                    }\r\n                }\r\n                for (let i = 0; i < Math.min(textLines.length, 3); i++) {\r\n                    ctx.fillText(\r\n                        textLines[i],\r\n                        31,\r\n                        110 +\r\n                            lfmHeight * index +\r\n                            i * (19 + props.fontModifier) +\r\n                            props.fontModifier * 1.5\r\n                    );\r\n                }\r\n\r\n                // Draw active time\r\n                if (\r\n                    group.AdventureActive !== 0 &&\r\n                    group.AdventureActive !== undefined\r\n                ) {\r\n                    ctx.fillStyle = props.highVisibility\r\n                        ? \"#5fcafc\"\r\n                        : \"#02adfb\";\r\n                    ctx.textAlign = \"center\";\r\n                    ctx.fillText(\r\n                        \"Adventure Active: \" +\r\n                            group.AdventureActive +\r\n                            (group.AdventureActive === 1\r\n                                ? \" minute\"\r\n                                : \" minutes\"),\r\n                        200,\r\n                        148 + lfmHeight * index\r\n                    );\r\n                }\r\n            });\r\n\r\n            if (\r\n                groupSelection.groupIndex !== -1 &&\r\n                groupSelection.groupIndex < props.data.data.Groups.length\r\n            )\r\n                DrawPlayerOverlay(\r\n                    props.data.data.Groups[groupSelection.groupIndex],\r\n                    groupSelection.cursorPosition\r\n                );\r\n        }\r\n\r\n        function DrawPlayerOverlay(group, cursorPosition) {\r\n            if (group === null) return;\r\n\r\n            var estimatedBottom =\r\n                cursorPosition[1] + 3 + (group.Members.length + 1) * 41 + 26;\r\n            if (estimatedBottom > canvas.height) {\r\n                cursorPosition[1] -= estimatedBottom - canvas.height;\r\n            }\r\n\r\n            var fontModifier = props.fontModifier === 0 ? 0 : 4;\r\n\r\n            ctx.drawImage(\r\n                sprite,\r\n                0,\r\n                189,\r\n                287,\r\n                2,\r\n                cursorPosition[0],\r\n                cursorPosition[1],\r\n                287,\r\n                2\r\n            );\r\n\r\n            // Each player in the party is 41px in height\r\n            let memberList = [group.Leader, ...group.Members];\r\n            if (memberList !== null) {\r\n                memberList.forEach((member, i) => {\r\n                    ctx.drawImage(\r\n                        sprite,\r\n                        0,\r\n                        191,\r\n                        287,\r\n                        41,\r\n                        cursorPosition[0],\r\n                        cursorPosition[1] + 2 + 41 * i,\r\n                        287,\r\n                        41\r\n                    );\r\n                    var grad = ctx.createLinearGradient(\r\n                        0,\r\n                        cursorPosition[1] + 2 + 41 * i,\r\n                        0,\r\n                        cursorPosition[1] + 2 + 41 * (i + 1)\r\n                    );\r\n                    grad.addColorStop(0, \"#404947\");\r\n                    grad.addColorStop(0.25, \"#4d5955\");\r\n                    grad.addColorStop(0.75, \"#4d5955\");\r\n                    grad.addColorStop(1, \"#404947\");\r\n                    ctx.fillStyle = grad;\r\n                    ctx.fillRect(\r\n                        cursorPosition[0] + 4,\r\n                        cursorPosition[1] + 3 + 41 * i,\r\n                        269,\r\n                        39\r\n                    );\r\n\r\n                    // Race\r\n                    if (member.Gender == \"Unknown\") member.Gender = \"Male\";\r\n                    let raceIconPosition = getRaceIconPosition(\r\n                        member.Gender + \" \" + member.Race,\r\n                        true\r\n                    );\r\n                    ctx.drawImage(\r\n                        sprite,\r\n                        raceIconPosition[0],\r\n                        raceIconPosition[1],\r\n                        18,\r\n                        18,\r\n                        cursorPosition[0] + 4,\r\n                        cursorPosition[1] + 2 + 41 * i,\r\n                        18,\r\n                        18\r\n                    );\r\n\r\n                    // Name\r\n                    ctx.fillStyle = \"#f6f1d3\";\r\n                    ctx.textBaseline = \"middle\";\r\n                    ctx.font = 18 + fontModifier + \"px 'Trebuchet MS'\"; // 18px\r\n                    ctx.textAlign = \"left\";\r\n                    ctx.fillText(\r\n                        member.Name,\r\n                        cursorPosition[0] + 26,\r\n                        cursorPosition[1] + 3 + 41 * i + 10\r\n                    );\r\n                    var memberWidth = ctx.measureText(member.Name).width;\r\n                    if (member.Name.startsWith(\"Clemei\")) {\r\n                        memberWidth += 22;\r\n                        ctx.drawImage(\r\n                            sprite,\r\n                            746,\r\n                            189,\r\n                            17,\r\n                            18,\r\n                            cursorPosition[0] + 8 + memberWidth,\r\n                            cursorPosition[1] + 3 + 41 * i,\r\n                            17,\r\n                            18\r\n                        );\r\n                    }\r\n\r\n                    // Location\r\n                    if (member.Location != null) {\r\n                        ctx.font = 12 + \"px 'Trebuchet MS'\";\r\n                        ctx.textAlign = \"center\";\r\n                        ctx.fillText(\r\n                            member.Location.Name,\r\n                            cursorPosition[0] + 102,\r\n                            cursorPosition[1] + 3 + 41 * i + 30\r\n                        );\r\n                    }\r\n\r\n                    // Level\r\n                    ctx.textAlign = \"center\";\r\n                    ctx.font = 17 + fontModifier + \"px Arial\"; // 15px\r\n                    ctx.fillText(\r\n                        member.TotalLevel,\r\n                        cursorPosition[0] + 4 + 256,\r\n                        cursorPosition[1] + 3 + 41 * i + 11\r\n                    );\r\n\r\n                    // Classes\r\n                    ctx.font = \"13px Arial\";\r\n                    ctx.textBaseline = \"alphabetic\";\r\n                    ctx.textAlign = \"right\";\r\n                    if (member.Classes !== null && member.Classes !== undefined)\r\n                        for (var c = 0; c < member.Classes.length; c++) {\r\n                            // First pass for icons\r\n                            var xp = cursorPosition[0] + 166 + 21 * c;\r\n                            var yp = cursorPosition[1] + 4 + 41 * i;\r\n\r\n                            ctx.fillStyle = \"#3e4641\";\r\n                            ctx.fillRect(xp - 1, yp - 1, 20, 20);\r\n\r\n                            let classIconPosition = getClassIconPosition(\r\n                                member.Classes[c].Name,\r\n                                true\r\n                            );\r\n                            ctx.drawImage(\r\n                                sprite,\r\n                                classIconPosition[0],\r\n                                classIconPosition[1],\r\n                                18,\r\n                                18,\r\n                                xp,\r\n                                yp,\r\n                                18,\r\n                                18\r\n                            );\r\n                        }\r\n                    if (member.Classes !== null && member.Classes !== undefined)\r\n                        for (var c = 0; c < member.Classes.length; c++) {\r\n                            // Second pass for levels\r\n                            var xp = cursorPosition[0] + 166 + 21 * c;\r\n                            var yp = cursorPosition[1] + 4 + 41 * i;\r\n\r\n                            ctx.fillStyle = \"black\";\r\n                            ctx.fillText(\r\n                                member.Classes[c].Level,\r\n                                xp + 22,\r\n                                yp + 18\r\n                            );\r\n                            ctx.fillStyle = \"white\";\r\n                            ctx.fillText(\r\n                                member.Classes[c].Level,\r\n                                xp + 21,\r\n                                yp + 17\r\n                            );\r\n                        }\r\n                });\r\n            }\r\n\r\n            ctx.drawImage(\r\n                sprite,\r\n                0,\r\n                232,\r\n                287,\r\n                26,\r\n                cursorPosition[0],\r\n                cursorPosition[1] + 2 + memberList.length * 41,\r\n                287,\r\n                26\r\n            );\r\n\r\n            // Comment\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.fillStyle = fontModifier > 0 ? \"white\" : \"#bfbfbf\";\r\n            ctx.font = 15 + fontModifier + \"px Arial\"; // 15px\r\n            ctx.textAlign = \"left\";\r\n            var textLines = wrapText(group.Comment, 269);\r\n\r\n            for (var i = 0; i < textLines.length; i++) {\r\n                ctx.drawImage(\r\n                    sprite,\r\n                    0,\r\n                    232,\r\n                    287,\r\n                    23,\r\n                    cursorPosition[0],\r\n                    cursorPosition[1] +\r\n                        2 +\r\n                        memberList.length * 41 +\r\n                        i * (19 + (fontModifier < 0 ? -3 : 0)),\r\n                    287,\r\n                    23\r\n                );\r\n                ctx.fillText(\r\n                    textLines[i],\r\n                    cursorPosition[0] + 4,\r\n                    cursorPosition[1] +\r\n                        memberList.length * 41 +\r\n                        13 +\r\n                        i * (19 + (fontModifier < 0 ? -3 : 0))\r\n                );\r\n            }\r\n\r\n            ctx.drawImage(\r\n                sprite,\r\n                0,\r\n                255,\r\n                287,\r\n                3,\r\n                cursorPosition[0],\r\n                cursorPosition[1] +\r\n                    2 +\r\n                    memberList.length * 41 +\r\n                    textLines.length * (19 + (fontModifier < 0 ? -3 : 0)) +\r\n                    (fontModifier < 0 ? 4 : 3),\r\n                287,\r\n                3\r\n            );\r\n        }\r\n\r\n        // Helper function for wrapping text\r\n        function wrapText(text, maxWidth) {\r\n            if (text === null) return \"\";\r\n            let words = text.split(\" \");\r\n            let lines = [];\r\n            let currentLine = words[0];\r\n\r\n            for (let i = 1; i < words.length; i++) {\r\n                let word = words[i];\r\n                let width = ctx.measureText(currentLine + \" \" + word).width;\r\n                if (width < maxWidth) {\r\n                    currentLine += \" \" + word;\r\n                } else {\r\n                    lines.push(currentLine);\r\n                    currentLine = word;\r\n                }\r\n            }\r\n            lines.push(currentLine);\r\n            return lines;\r\n        }\r\n\r\n        // Helper function for getting race icon position\r\n        function getRaceIconPosition(race, eligible) {\r\n            let xsrc = 0;\r\n            let ysrc = 0;\r\n            switch (race) {\r\n                case \"Female Aasimar\":\r\n                case \"Female Aasimar Scourge\":\r\n                    xsrc = 0;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Female Dragonborn\":\r\n                    xsrc = 18;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Female Drow Elf\":\r\n                    xsrc = 36;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Female Dwarf\":\r\n                    xsrc = 54;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Female Elf\":\r\n                case \"Female Sun Elf\":\r\n                case \"Female Wood Elf\":\r\n                    xsrc = 72;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Female Gnome\":\r\n                case \"Female Deep Gnome\":\r\n                    xsrc = 0;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Half Elf\":\r\n                    xsrc = 18;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Halfling\":\r\n                    xsrc = 36;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Half Orc\":\r\n                    xsrc = 54;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Human\":\r\n                case \"Female Shadar-kai\":\r\n                case \"Female Purple Dragon Knight\":\r\n                    xsrc = 72;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Shifter\":\r\n                case \"Female Razorclaw Shifter\":\r\n                    xsrc = 90;\r\n                    ysrc = 18;\r\n                    break;\r\n                case \"Female Tiefling\":\r\n                case \"Female Tiefling Scoundrel\":\r\n                    xsrc = 0;\r\n                    ysrc = 36;\r\n                    break;\r\n                case \"Female Warforged\":\r\n                case \"Female Bladeforged\":\r\n                    xsrc = 18;\r\n                    ysrc = 36;\r\n                    break;\r\n                case \"Male Aasimar\":\r\n                case \"Male Aasimar Scourge\":\r\n                    xsrc = 36;\r\n                    ysrc = 36;\r\n                    break;\r\n                case \"Male Dragonborn\":\r\n                    xsrc = 54;\r\n                    ysrc = 36;\r\n                    break;\r\n                case \"Male Drow Elf\":\r\n                    xsrc = 72;\r\n                    ysrc = 36;\r\n                    break;\r\n                case \"Male Dwarf\":\r\n                    xsrc = 0;\r\n                    ysrc = 54;\r\n                    break;\r\n                case \"Male Elf\":\r\n                case \"Male Sun Elf\":\r\n                case \"Male Wood Elf\":\r\n                    xsrc = 18;\r\n                    ysrc = 54;\r\n                    break;\r\n                case \"Male Gnome\":\r\n                case \"Male Deep Gnome\":\r\n                    xsrc = 36;\r\n                    ysrc = 54;\r\n                    break;\r\n                case \"Male Half Elf\":\r\n                    xsrc = 54;\r\n                    ysrc = 54;\r\n                    break;\r\n                case \"Male Halfling\":\r\n                    xsrc = 72;\r\n                    ysrc = 54;\r\n                    break;\r\n                case \"Male Half Orc\":\r\n                    xsrc = 0;\r\n                    ysrc = 72;\r\n                    break;\r\n                case \"Male Human\":\r\n                case \"Male Shadar-kai\":\r\n                case \"Male Purple Dragon Knight\":\r\n                    xsrc = 18;\r\n                    ysrc = 72;\r\n                    break;\r\n                case \"Male Shifter\":\r\n                case \"Male Razorclaw Shifter\":\r\n                    xsrc = 90;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Male Tiefling\":\r\n                case \"Male Tiefling Scoundrel\":\r\n                    xsrc = 36;\r\n                    ysrc = 72;\r\n                    break;\r\n                case \"Male Warforged\":\r\n                case \"Male Bladeforged\":\r\n                    xsrc = 54;\r\n                    ysrc = 72;\r\n                    break;\r\n                default:\r\n                    xsrc = 72;\r\n                    ysrc = 72;\r\n                    break;\r\n            }\r\n            return [xsrc + (eligible ? 493 : 601), ysrc + 189];\r\n        }\r\n\r\n        // Helper function for getting race icon position\r\n        function getClassIconPosition(classname, eligible) {\r\n            let xsrc = 0;\r\n            let ysrc = 0;\r\n            switch (classname) {\r\n                case \"Alchemist\": // 70032AFE\r\n                    xsrc = 21;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Artificer\": // 700148CE\r\n                    xsrc = 42;\r\n                    ysrc = 42;\r\n                    break;\r\n                case \"Barbarian\": // 7000006B\r\n                    xsrc = 84;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Bard\": // 7000006C\r\n                    xsrc = 0;\r\n                    ysrc = 42;\r\n                    break;\r\n                case \"Cleric\": // 7000006D\r\n                    xsrc = 42;\r\n                    ysrc = 21;\r\n                    break;\r\n                case \"Druid\": // 70016ADB\r\n                    xsrc = 63;\r\n                    ysrc = 42;\r\n                    break;\r\n                case \"Favored Soul\": // 7000C5CE\r\n                    xsrc = 63;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Fighter\": // 7000006E\r\n                    xsrc = 0;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Monk\": // 70006BF5\r\n                    xsrc = 21;\r\n                    ysrc = 42;\r\n                    break;\r\n                case \"Paladin\": // 7000006F\r\n                    xsrc = 42;\r\n                    ysrc = 0;\r\n                    break;\r\n                case \"Ranger\": // 70000070\r\n                    xsrc = 21;\r\n                    ysrc = 21;\r\n                    break;\r\n                case \"Rogue\": // 70000071\r\n                    xsrc = 0;\r\n                    ysrc = 21;\r\n                    break;\r\n                case \"Sorcerer\": // 7000000B\r\n                    xsrc = 84;\r\n                    ysrc = 21;\r\n                    break;\r\n                case \"Warlock\": // 7000C5DA\r\n                    xsrc = 84;\r\n                    ysrc = 42;\r\n                    break;\r\n                case \"Wizard\": // 7000000E\r\n                    xsrc = 63;\r\n                    ysrc = 21;\r\n                    break;\r\n                case \"Epic\": // 7001B1A3\r\n                    xsrc = 423 - (eligible ? 0 : 103);\r\n                    ysrc = 0;\r\n                    break;\r\n            }\r\n            return [xsrc + 287 + (eligible ? 0 : 103), ysrc + 189];\r\n        }\r\n    }, [\r\n        props.data.timestamp,\r\n        props.data.data,\r\n        // props.showNotEligible,\r\n        // props.sortOrder,\r\n        // props.minimumLevel,\r\n        // props.maximumLevel,\r\n        props.fontModifier,\r\n        props.highVisibility,\r\n        isImageLoaded,\r\n        groupSelection.groupIndex,\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n            }}\r\n        >\r\n            <img\r\n                ref={spriteRef}\r\n                src={PanelSprite}\r\n                onLoad={() => set_isImageLoaded(true)}\r\n                style={{ display: \"none\" }}\r\n            />\r\n            {props.children}\r\n            <canvas\r\n                className=\"lfm-canvas\"\r\n                ref={canvasRef}\r\n                style={{\r\n                    backgroundColor: \"black\",\r\n                    width: \"100%\",\r\n                }}\r\n                width={panelWidth}\r\n                height={props.adjustedGroupCount * lfmHeight + 99}\r\n            ></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CanvasLfmPanel;\r\n","var _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSettings = function SvgSettings(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#FFFFFF\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,0h24v24H0V0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSettings, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/settings.8d65b2d7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgNotification = function SvgNotification(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z\",\n    fill: \"#fff\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNotification, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/notification.22fae53d.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgFullscreen = function SvgFullscreen(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\",\n    fill: \"#fff\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFullscreen, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/fullscreen.f747ea56.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgFullscreenExit = function SvgFullscreenExit(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\",\n    fill: \"#fff\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFullscreenExit, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/fullscreen-exit.f1bccdfb.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { ReactComponent as ServerSelectSVG } from \"../assets/global/server.svg\";\r\nimport { ReactComponent as FilterSVG } from \"../assets/global/filter.svg\";\r\nimport { ReactComponent as SettingsSVG } from \"../assets/global/settings.svg\";\r\nimport { ReactComponent as NotificationSVG } from \"../assets/global/notification.svg\";\r\nimport { ReactComponent as FullscreenSVG } from \"../assets/global/fullscreen.svg\";\r\nimport { ReactComponent as FullscreenExitSVG } from \"../assets/global/fullscreen-exit.svg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst LfmFilterBar = (props) => {\r\n    const [fullscreen, set_fullscreen] = React.useState(false);\r\n    const history = useHistory();\r\n    const goBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"lfm-filter-bar\"\r\n            style={{ position: fullscreen ? \"fixed\" : \"relative\", top: \"0px\" }}\r\n        >\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <Link\r\n                    className=\"lfm-filter-bar-item server-selection\"\r\n                    to=\"/grouping\"\r\n                    style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"var(--text)\",\r\n                    }}\r\n                >\r\n                    <ServerSelectSVG\r\n                        className=\"link-icon\"\r\n                        style={{\r\n                            width: \"30px\",\r\n                            height: \"30px\",\r\n                            paddingRight: \"5px\",\r\n                        }}\r\n                    />\r\n                    {props.currentServer}\r\n                </Link>\r\n                <div\r\n                    className=\"lfm-filter-bar-item\"\r\n                    style={{ marginLeft: \"auto\" }}\r\n                    onClick={props.handleFilterButton}\r\n                >\r\n                    <SettingsSVG\r\n                        className=\"link-icon\"\r\n                        style={{\r\n                            width: \"30px\",\r\n                            height: \"30px\",\r\n                            paddingRight: \"5px\",\r\n                        }}\r\n                    />\r\n                    <span className=\"lfm-filter-bar-text settings\">\r\n                        Settings\r\n                    </span>\r\n                </div>\r\n                <div className=\"lfm-filter-bar-item\">\r\n                    <NotificationSVG\r\n                        className=\"link-icon\"\r\n                        style={{\r\n                            width: \"30px\",\r\n                            height: \"30px\",\r\n                            paddingRight: \"5px\",\r\n                        }}\r\n                    />\r\n                    <span className=\"lfm-filter-bar-text notifications\">\r\n                        Notifications\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"lfm-filter-bar-item hide-on-mobile\"\r\n                    onClick={() => {\r\n                        set_fullscreen(!fullscreen);\r\n                    }}\r\n                >\r\n                    {fullscreen ? (\r\n                        <FullscreenExitSVG\r\n                            className=\"link-icon \"\r\n                            style={{\r\n                                width: \"30px\",\r\n                                height: \"30px\",\r\n                                paddingRight: \"5px\",\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <FullscreenSVG\r\n                            className=\"link-icon\"\r\n                            style={{\r\n                                width: \"30px\",\r\n                                height: \"30px\",\r\n                                paddingRight: \"5px\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <span className=\"lfm-filter-bar-text\">\r\n                        {fullscreen ? \"Go back\" : \"Fullscreen\"}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LfmFilterBar;\r\n","import React from \"react\";\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\n\r\nconst sliderStyle = {\r\n    // Give the slider some width\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: 50,\r\n};\r\n\r\nexport function Handle({ handle: { id, value, percent }, getHandleProps }) {\r\n    return (\r\n        <div\r\n            className=\"slider-handle\"\r\n            style={{\r\n                left: `${percent}%`,\r\n            }}\r\n            {...getHandleProps(id)}\r\n        >\r\n            <div style={{ marginTop: -25, fontSize: \"large\" }}>{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Track({ source, target, getTrackProps }) {\r\n    return (\r\n        <div\r\n            className=\"slider-track\"\r\n            style={{\r\n                left: `${source.percent}%`,\r\n                width: `${target.percent - source.percent}%`,\r\n            }}\r\n            {\r\n                ...getTrackProps() /* this will set up events if you want it to be clickeable (optional) */\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nconst LevelRangeSlider = (props) => {\r\n    return (\r\n        <Slider\r\n            rootStyle={sliderStyle}\r\n            domain={[1, 30]}\r\n            step={1}\r\n            mode={2}\r\n            values={[props.minimumLevel, props.maximumLevel]}\r\n            onChange={props.handleChange}\r\n        >\r\n            <Rail>\r\n                {({ getRailProps }) => (\r\n                    <div className=\"slider-rail\" {...getRailProps()} />\r\n                )}\r\n            </Rail>\r\n            <Handles>\r\n                {({ handles, getHandleProps }) => (\r\n                    <div className=\"slider-handles\">\r\n                        {handles.map((handle) => (\r\n                            <Handle\r\n                                key={handle.id}\r\n                                handle={handle}\r\n                                getHandleProps={getHandleProps}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Handles>\r\n            <Tracks left={false} right={false}>\r\n                {({ tracks, getTrackProps }) => (\r\n                    <div className=\"slider-tracks\">\r\n                        {tracks.map(({ id, source, target }) => (\r\n                            <Track\r\n                                key={id}\r\n                                source={source}\r\n                                target={target}\r\n                                getTrackProps={getTrackProps}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Tracks>\r\n        </Slider>\r\n    );\r\n};\r\n\r\nexport default LevelRangeSlider;\r\n","import React from \"react\";\r\n\r\nconst Group = (props) => {\r\n    const classnames = [\r\n        { Name: \"Alchemist\", Short: \"Alc\" },\r\n        { Name: \"Artificer\", Short: \"Art\" },\r\n        { Name: \"Barbarian\", Short: \"Barb\" },\r\n        { Name: \"Bard\", Short: \"Brd\" },\r\n        { Name: \"Cleric\", Short: \"Clr\" },\r\n        { Name: \"Druid\", Short: \"Drd\" },\r\n        { Name: \"Favored Soul\", Short: \"FvS\" },\r\n        { Name: \"Fighter\", Short: \"Ftr\" },\r\n        { Name: \"Monk\", Short: \"Mnk\" },\r\n        { Name: \"Paladin\", Short: \"Pal\" },\r\n        { Name: \"Ranger\", Short: \"Rgr\" },\r\n        { Name: \"Rogue\", Short: \"Rog\" },\r\n        { Name: \"Sorcerer\", Short: \"Sorc\" },\r\n        { Name: \"Warlock\", Short: \"Wlk\" },\r\n        { Name: \"Wizard\", Short: \"Wiz\" },\r\n    ];\r\n\r\n    function GetShortName(cls) {\r\n        let shortname = \"\";\r\n        classnames.forEach((obj) => {\r\n            if (obj.Name === cls) shortname = obj.Short;\r\n        });\r\n        return shortname || cls;\r\n    }\r\n\r\n    return (\r\n        <div className=\"group\" onClick={props.handleClick}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <span style={{ fontWeight: \"bold\", fontSize: \"2rem\" }}>\r\n                    {props.group.Leader.Name}\r\n                </span>\r\n                <span style={{ marginLeft: \"auto\", fontSize: \"1.8rem\" }}>\r\n                    {props.group.MinimumLevel} - {props.group.MaximumLevel}\r\n                </span>\r\n            </div>\r\n            {props.group.Quest ? (\r\n                <span\r\n                    style={{\r\n                        fontSize: \"1.7rem\",\r\n                        color: \"var(--text-lfm-number)\",\r\n                    }}\r\n                >\r\n                    {props.group.Quest.Name} ({props.group.Difficulty})\r\n                </span>\r\n            ) : (\r\n                <span></span>\r\n            )}\r\n            {props.group.Comment && (\r\n                <span style={{ fontSize: \"1.7rem\" }}>\r\n                    \"{props.group.Comment}\"\r\n                </span>\r\n            )}\r\n            {props.group.AdventureActive !== 0 && (\r\n                <span style={{ fontSize: \"1.4rem\", color: \"var(--blue-text)\" }}>\r\n                    Adventure Active: {props.group.AdventureActive} minute\r\n                    {props.group.AdventureActive !== 1 ? \"s\" : \"\"}\r\n                </span>\r\n            )}\r\n            {props.expanded ? (\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        gap: \"2px\",\r\n                        marginTop: \"5px\",\r\n                    }}\r\n                >\r\n                    <div className=\"group-member\">\r\n                        <table>\r\n                            <tbody>\r\n                                <tr className=\"group-member-entry\">\r\n                                    <td\r\n                                        className=\"group-member-entry name\"\r\n                                        style={{\r\n                                            paddingRight: \"20px\",\r\n                                        }}\r\n                                    >\r\n                                        {props.group.Leader.Name}\r\n                                    </td>\r\n                                    <td\r\n                                        style={{\r\n                                            color: \"var(--text-faded)\",\r\n                                            paddingRight: \"20px\",\r\n                                        }}\r\n                                    >\r\n                                        {props.group.Leader.Classes &&\r\n                                            props.group.Leader.Classes.map(\r\n                                                (cls, i) => (\r\n                                                    <span key={i}>\r\n                                                        {i !== 0 && \" / \"}\r\n                                                        {GetShortName(\r\n                                                            cls.Name\r\n                                                        )}{\" \"}\r\n                                                        {cls.Level}\r\n                                                    </span>\r\n                                                )\r\n                                            )}\r\n                                    </td>\r\n                                    <td\r\n                                        style={{\r\n                                            color: \"var(--text-faded)\",\r\n                                            paddingRight: \"20px\",\r\n                                        }}\r\n                                    >\r\n                                        {props.group.Leader.Location.Name}\r\n                                    </td>\r\n                                </tr>\r\n                                {props.group.Members &&\r\n                                    props.group.Members.map((member, i) => (\r\n                                        <tr\r\n                                            key={i}\r\n                                            className=\"group-member-entry\"\r\n                                        >\r\n                                            <td\r\n                                                className=\"group-member-entry name\"\r\n                                                style={{\r\n                                                    paddingRight: \"20px\",\r\n                                                }}\r\n                                            >\r\n                                                {member.Name}\r\n                                            </td>\r\n                                            <td\r\n                                                style={{\r\n                                                    color: \"var(--text-faded)\",\r\n                                                    paddingRight: \"20px\",\r\n                                                }}\r\n                                            >\r\n                                                {member.Classes &&\r\n                                                    member.Classes.map(\r\n                                                        (cls, i) => (\r\n                                                            <span key={i}>\r\n                                                                {i !== 0 &&\r\n                                                                    \" / \"}\r\n                                                                {GetShortName(\r\n                                                                    cls.Name\r\n                                                                )}{\" \"}\r\n                                                                {cls.Level}\r\n                                                            </span>\r\n                                                        )\r\n                                                    )}\r\n                                            </td>\r\n                                            <td\r\n                                                style={{\r\n                                                    color: \"var(--text-faded)\",\r\n                                                    paddingRight: \"20px\",\r\n                                                }}\r\n                                            >\r\n                                                {member.Location.Name}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                props.group.Members.length > 0 && (\r\n                    <span\r\n                        style={{\r\n                            textAlign: \"center\",\r\n                            fontSize: \"1.2rem\",\r\n                            color: \"var(--text-faded)\",\r\n                        }}\r\n                    >\r\n                        Click to view all {props.group.Members.length + 1}{\" \"}\r\n                        members\r\n                    </span>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Group;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Card from \"../components/Card\";\r\nimport ReportIssueForm from \"./ReportIssueForm\";\r\nimport PopupMessage from \"./PopupMessage\";\r\nimport MiniGroup from \"./MiniGroup\";\r\nimport CanvasLfmPanel from \"./CanvasLfmPanel\";\r\nimport LfmFilter from \"./LfmFilterBar\";\r\nimport LevelRangeSlider from \"./LevelRangeSlider\";\r\nimport { Fetch, VerifyLfmData } from \"./DataLoader\";\r\nimport Group from \"./Group\";\r\n\r\nconst TITLE = \"DDO Live LFM Viewer\";\r\n\r\nconst serverNames = [\r\n    \"Argonnessen\",\r\n    \"Cannith\",\r\n    \"Ghallanda\",\r\n    \"Khyber\",\r\n    \"Orien\",\r\n    \"Sarlona\",\r\n    \"Thelanis\",\r\n    \"Wayfinder\",\r\n    \"Hardcore\",\r\n];\r\n\r\nconst GroupingSpecific = (props) => {\r\n    // Data\r\n    var [currentServer, set_currentServer] = React.useState(null);\r\n    var [groupDataMaster, set_groupDataMaster] = React.useState(null);\r\n    var [groupDataServer, set_groupDataServer] = React.useState({\r\n        timestamp: 0,\r\n        data: null,\r\n    });\r\n    var [groupCount, set_groupCount] = React.useState(null);\r\n    var [adjustedGroupCount, set_adjustedGroupCount] = React.useState(4);\r\n    var [serverStatusData, set_serverStatusData] = React.useState(null);\r\n    var [isServerOnline, set_isServerOnline] = React.useState(null);\r\n    var [eligibleCount, set_eligibleCount] = React.useState(null);\r\n    // var [failedFetchAttempts, set_failedFetchAttempts] = React.useState(0);\r\n\r\n    var [attemptedServerStatusFetch, set_attemptedServerStatusFetch] =\r\n        React.useState(false);\r\n    var [attemptedGroupDataFetch, set_attemptedGroupDataFetch] =\r\n        React.useState(false);\r\n\r\n    var [lastFetchTime, set_lastFetchTime] = React.useState(null);\r\n\r\n    // Settings\r\n    var [fontModifier, set_fontModifier] = React.useState(0);\r\n    var [highVisibility, set_highVisibility] = React.useState(false);\r\n    var [filterPanelVisible, set_filterPanelVisible] = React.useState(false);\r\n    var [classicLook, set_classicLook] = React.useState(false);\r\n    var [theme, set_theme] = React.useState(true);\r\n\r\n    var [expandedGroups, set_expandedGroups] = React.useState([]);\r\n\r\n    // LFM filters\r\n    var [minimumLevel, set_minimumLevel] = React.useState(1);\r\n    var [maximumLevel, set_maximumLevel] = React.useState(30);\r\n    var [showNotEligible, set_showNotEligible] = React.useState(true);\r\n    var [sortAscending, set_sortAscending] = React.useState(false);\r\n    var [difficulty, set_difficulty] = React.useState([\r\n        true,\r\n        true,\r\n        true,\r\n        true,\r\n        true,\r\n    ]);\r\n\r\n    function IsExpanded(group) {\r\n        let val = false;\r\n        expandedGroups.forEach((g) => {\r\n            if (g.Leader.Name === group.Leader.Name) val = true;\r\n        });\r\n        return val;\r\n    }\r\n\r\n    function ToggleTheme() {\r\n        let theme = localStorage.getItem(\"theme\");\r\n        if (theme === \"light-theme\") {\r\n            theme = \"dark\";\r\n\r\n            document.body.classList.replace(\"light-theme\", \"dark-theme\");\r\n            localStorage.setItem(\"theme\", \"dark-theme\");\r\n            set_theme(\"dark-theme\");\r\n        } else {\r\n            theme = \"light\";\r\n\r\n            document.body.classList.replace(\"dark-theme\", \"light-theme\");\r\n            localStorage.setItem(\"theme\", \"light-theme\");\r\n            set_theme(\"light-theme\");\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Load local storage\r\n        let theme = localStorage.getItem(\"theme\");\r\n        set_theme(theme);\r\n\r\n        let minlevel = localStorage.getItem(\"minimum-level\");\r\n        set_minimumLevel(minlevel || 1);\r\n\r\n        let maxlevel = localStorage.getItem(\"maximum-level\");\r\n        set_maximumLevel(maxlevel || 30);\r\n\r\n        let shownoteligible = localStorage.getItem(\"show-not-eligible\");\r\n        set_showNotEligible(\r\n            shownoteligible !== null ? shownoteligible === \"true\" : true\r\n        );\r\n\r\n        let sortascending = localStorage.getItem(\"sort-order\");\r\n        set_sortAscending(\r\n            sortascending !== null ? sortascending === \"true\" : true\r\n        );\r\n\r\n        let classiclook = localStorage.getItem(\"classic-look\");\r\n        set_classicLook(classiclook !== null ? classiclook === \"true\" : true);\r\n\r\n        let highvisibility = localStorage.getItem(\"high-visibility\");\r\n        set_highVisibility(\r\n            highvisibility !== null ? highvisibility === \"true\" : false\r\n        );\r\n\r\n        let fontmodifier = localStorage.getItem(\"font-modifier\");\r\n        set_fontModifier(fontmodifier !== null ? +fontmodifier : 0);\r\n\r\n        // async function fetchArbitraryData(url, type) {\r\n        //     let response = await fetch(url);\r\n        //     if (type === \"json\") response = await response.json();\r\n        //     else if (type === \"text\") response = await response.text();\r\n        //     return response;\r\n        // }\r\n\r\n        // async function run(timeout) {\r\n        //     let ret = new Promise(async (resolve, reject) => {\r\n        //         setTimeout(() => {\r\n        //             if (!ret.isResolved) {\r\n        //                 reject();\r\n        //             }\r\n        //         }, timeout);\r\n\r\n        //         await fetchArbitraryData(\r\n        //             \"https://www.playeraudit.com/api/groups\",\r\n        //             \"json\"\r\n        //         )\r\n        //             .then((val) => {\r\n        //                 set_lastFetchTime(Date.now());\r\n        //                 set_attemptedGroupDataFetch(true);\r\n        //                 // Data verification\r\n        //                 if (val === null) return;\r\n        //                 if (val.length !== 9) return;\r\n        //                 let missingfields = false;\r\n        //                 val.forEach((server) => {\r\n        //                     if (server.Name === undefined) missingfields = true;\r\n        //                     if (server.LastUpdateTime === undefined)\r\n        //                         missingfields = true;\r\n        //                     if (server.Groups === undefined)\r\n        //                         missingfields = true;\r\n        //                     if (server.GroupCount === undefined)\r\n        //                         missingfields = true;\r\n        //                 });\r\n        //                 if (missingfields) return;\r\n\r\n        //                 resolve(val);\r\n        //             })\r\n        //             .catch((val) => {\r\n        //                 set_lastFetchTime(Date.now());\r\n        //                 set_attemptedGroupDataFetch(true);\r\n        //                 // console.error(\"Failed to fetch group data\");\r\n        //             });\r\n        //     });\r\n        //     return ret;\r\n        // }\r\n        var failedAttemptCount = 5;\r\n\r\n        function FetchLfmData() {\r\n            Fetch(\"https://www.playeraudit.com/api/groups\", 5000)\r\n                .then((val) => {\r\n                    set_lastFetchTime(Date.now());\r\n                    set_attemptedGroupDataFetch(true);\r\n                    if (VerifyLfmData(val)) {\r\n                        set_popupMessages([]);\r\n                        failedAttemptCount = 0;\r\n                        set_groupDataMaster(val);\r\n                    } else {\r\n                        failedAttemptCount++;\r\n                        if (failedAttemptCount > 5) {\r\n                            set_popupMessages([\r\n                                ...popupMessages,\r\n                                {\r\n                                    title: \"Something went wrong\",\r\n                                    message:\r\n                                        \"Pretty descriptive, I know. Try refreshing the page. If the issue continues, please report it.\",\r\n                                    icon: \"warning\",\r\n                                    fullscreen: false,\r\n                                    reportMessage:\r\n                                        val || \"Group data returned null\",\r\n                                },\r\n                            ]);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    failedAttemptCount++;\r\n                    set_lastFetchTime(Date.now());\r\n                    set_attemptedGroupDataFetch(true);\r\n                    if (failedAttemptCount > 5) {\r\n                        set_popupMessages([\r\n                            ...popupMessages,\r\n                            {\r\n                                title: \"We're stuck on a loading screen\",\r\n                                message:\r\n                                    \"This is taking longer than usual. You can refresh the page or report the issue.\",\r\n                                icon: \"warning\",\r\n                                fullscreen: false,\r\n                                reportMessage:\r\n                                    \"Could not fetch Group data. Timeout\",\r\n                            },\r\n                        ]);\r\n                    }\r\n                });\r\n        }\r\n        FetchLfmData();\r\n\r\n        const refreshdata = setInterval(() => {\r\n            FetchLfmData();\r\n        }, 8000);\r\n        return () => clearInterval(refreshdata);\r\n\r\n        // run(5000)\r\n        //     .then((val) => {\r\n        //         set_groupDataMaster(val);\r\n        //     })\r\n        //     .catch(function () {\r\n        //         set_popupMessages([\r\n        //             ...popupMessages,\r\n        //             {\r\n        //                 title: \"We're stuck on a loading screen\",\r\n        //                 message:\r\n        //                     \"This is taking longer than usual. You can refresh the page or report the issue.\",\r\n        //                 icon: \"warning\",\r\n        //                 fullscreen: false,\r\n        //                 reportMessage: \"This is the report message\",\r\n        //             },\r\n        //         ]);\r\n        //     });\r\n\r\n        // var failedAttemptCount = 0;\r\n        // const interval = setInterval(() => {\r\n        //     set_failedFetchAttempts(failedFetchAttempts + 1);\r\n        //     run(10000)\r\n        //         .then((val) => {\r\n        //             set_groupDataMaster(val);\r\n        //             set_popupMessages([]);\r\n        //             failedAttemptCount = 0;\r\n        //         })\r\n        //         .catch(function () {\r\n        //             failedAttemptCount++;\r\n        //             if (failedAttemptCount === 8) {\r\n        //                 set_popupMessages([\r\n        //                     {\r\n        //                         title: \"We're stuck on a loading screen\",\r\n        //                         message:\r\n        //                             \"This is taking longer than usual. You can refresh the page or report the issue.\",\r\n        //                         icon: \"warning\",\r\n        //                         fullscreen: false,\r\n        //                         reportMessage: \"This is the report message\",\r\n        //                     },\r\n        //                 ]);\r\n        //             }\r\n        //         });\r\n        // }, 8000);\r\n        // return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (currentServer === null) return;\r\n        async function fetchArbitraryData(url, type) {\r\n            let response = await fetch(url);\r\n            if (type === \"json\") response = await response.json();\r\n            else if (type === \"text\") response = await response.text();\r\n            return response;\r\n        }\r\n\r\n        fetchArbitraryData(\r\n            \"https://www.playeraudit.com/api/serverstatus\",\r\n            \"json\"\r\n        )\r\n            .then((val) => {\r\n                set_attemptedServerStatusFetch(true);\r\n                if (val === null || val.Worlds === undefined) {\r\n                    set_serverStatusData(null);\r\n                    return;\r\n                }\r\n                val.Worlds.forEach((server) => {\r\n                    if (server === null) return;\r\n                    if (\r\n                        server.Name !== undefined &&\r\n                        server.Status !== undefined\r\n                    ) {\r\n                        if (server.Name === currentServer) {\r\n                            set_isServerOnline = server.Status;\r\n                        }\r\n                    }\r\n                });\r\n                set_serverStatusData(val);\r\n            })\r\n            .catch(() => {\r\n                set_attemptedServerStatusFetch(true);\r\n                set_serverStatusData(null);\r\n            });\r\n    }, [currentServer]);\r\n\r\n    React.useEffect(() => {\r\n        if (!attemptedServerStatusFetch || !attemptedGroupDataFetch) return;\r\n\r\n        // At this point we've fetched (or at least attempted to) server\r\n        //  status and group data.\r\n\r\n        if (groupDataMaster !== null) {\r\n            if (groupDataMaster.length === 9) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let specialComment =\r\n            \"Ooops, we've broken something! I'm probably working on a fix. Unless I'm asleep. Then I'm almost certainly not.\";\r\n        if (serverStatusData !== null) {\r\n            if (serverStatusData.Worlds !== undefined) {\r\n                if (serverStatusData.Worlds.length > 0) {\r\n                    let serverData = serverStatusData.Worlds.filter((world) => {\r\n                        return world.Name === currentServer;\r\n                    });\r\n                    if (serverData.length === 1) {\r\n                        if (serverData[0].Status) {\r\n                            specialComment =\r\n                                \"This server is online, but we've lost connection. We'll be back in a bit.\";\r\n                        } else {\r\n                            specialComment =\r\n                                \"This server appears to be offline. Check back in a bit.\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        set_groupDataServer({\r\n            timestamp: Date.now(),\r\n            data: {\r\n                ServerName: currentServer,\r\n                Groups: [\r\n                    {\r\n                        Leader: {\r\n                            Name: \"DDO Audit\",\r\n                            Gender: \"Male\",\r\n                            Race: \"Human\",\r\n                        },\r\n                        Members: [],\r\n                        Eligible: true,\r\n                        Comment: specialComment,\r\n                        Quest: {\r\n                            Name: \"Feed the Hamsters\",\r\n                        },\r\n                        Difficulty: \"Reaper 11\",\r\n                    },\r\n                ],\r\n            },\r\n        });\r\n    }, [\r\n        groupDataMaster,\r\n        serverStatusData,\r\n        attemptedServerStatusFetch,\r\n        attemptedGroupDataFetch,\r\n        lastFetchTime,\r\n    ]);\r\n\r\n    React.useEffect(() => {\r\n        if (groupDataMaster) {\r\n            let total = 0;\r\n            groupDataMaster.forEach((server) => {\r\n                if (server !== null) {\r\n                    if (\r\n                        server.Name.toLowerCase() ===\r\n                        currentServer.toLowerCase()\r\n                    ) {\r\n                        total += server.GroupCount;\r\n                    }\r\n                }\r\n            });\r\n            set_groupCount(total);\r\n\r\n            // Get this server's data from the master data\r\n            var serverdata = groupDataMaster.filter((server) => {\r\n                if (server === null) return false;\r\n                return (\r\n                    server.Name.toLowerCase() === currentServer.toLowerCase()\r\n                );\r\n            });\r\n            if (serverdata !== null && serverdata.length > 0) {\r\n                serverdata = serverdata[0];\r\n            }\r\n\r\n            // Tag eiligibility status\r\n            serverdata.Groups.forEach((group) => {\r\n                let levelpass =\r\n                    minimumLevel <= group.MaximumLevel &&\r\n                    group.MinimumLevel <= maximumLevel;\r\n\r\n                group.Eligible = levelpass;\r\n            });\r\n\r\n            // Sort based on the user's sortOrder\r\n            serverdata.Groups.sort(function (a, b) {\r\n                return (\r\n                    (a.MaximumLevel === b.MaximumLevel\r\n                        ? a.Leader.Name > b.Leader.Name\r\n                        : a.MaximumLevel > b.MaximumLevel) ^\r\n                    (sortAscending === true ? 1 : -1)\r\n                );\r\n            });\r\n\r\n            let eligiblegroupcount = 0;\r\n            if (showNotEligible && classicLook === true) {\r\n                eligiblegroupcount = serverdata.Groups.length;\r\n            } else {\r\n                serverdata.Groups.forEach((group) => {\r\n                    if (group.Eligible) eligiblegroupcount++;\r\n                });\r\n            }\r\n            set_eligibleCount(eligiblegroupcount);\r\n            let adjustedCount = Math.max(4, eligiblegroupcount);\r\n            set_adjustedGroupCount(adjustedCount);\r\n\r\n            set_lastFetchTime(Date.now());\r\n            console.log(\"Data update\");\r\n            set_groupDataServer({ timestamp: Date.now(), data: serverdata });\r\n        } else {\r\n            set_groupCount(0);\r\n        }\r\n    }, [\r\n        groupDataMaster,\r\n        currentServer,\r\n        minimumLevel,\r\n        maximumLevel,\r\n        showNotEligible,\r\n        sortAscending,\r\n        difficulty,\r\n    ]);\r\n\r\n    const location = useLocation().pathname.substring(\r\n        useLocation().pathname.lastIndexOf(\"/\") + 1\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        let serverName =\r\n            location.substring(0, 1).toUpperCase() + location.substring(1);\r\n        if (serverNames.includes(serverName)) {\r\n            // Good server\r\n            set_currentServer(serverName);\r\n        } else {\r\n            // Bad server\r\n            set_currentServer(serverNames[0]); // Just default to the first server in the good list\r\n        }\r\n    }, [props.location]);\r\n\r\n    function GetSnarkyMessage() {\r\n        if (groupCount === 0) {\r\n            return \"You're going to have to post your own.\";\r\n        } else if (groupCount <= 2) {\r\n            return \"You don't have many options.\";\r\n        } else {\r\n            return \"If you're not in one, you're missing out!\";\r\n        }\r\n    }\r\n\r\n    // Report Form\r\n    var [reportFormVisibility, setReportFormVisibility] =\r\n        React.useState(\"none\");\r\n    var [reportFormReference, setReportFormReference] = React.useState(null);\r\n    function showReportForm(reference) {\r\n        // Grab relevant info from the tile element that's being reported\r\n        let referenceInfo = {\r\n            title: reference.title,\r\n            type: reference.chartType,\r\n            displayType: reference.displayType,\r\n            trendType: reference.trendType,\r\n            showActions: reference.showActions,\r\n            precomment: reference.precomment,\r\n            //data: reference.chartData,\r\n        };\r\n        // Show the report form\r\n        setReportFormReference(referenceInfo);\r\n        setReportFormVisibility(\"block\");\r\n    }\r\n    function hideReportForm() {\r\n        setReportFormVisibility(\"none\");\r\n    }\r\n    function report(reference, custom) {\r\n        showReportForm({\r\n            title: \"LFM Viewer\",\r\n            precomment: custom,\r\n            chartType: null,\r\n            displayType: null,\r\n            trendType: null,\r\n            showActions: null,\r\n        });\r\n    }\r\n\r\n    // Popup message\r\n    var [popupMessages, set_popupMessages] = React.useState([]);\r\n\r\n    return (\r\n        currentServer && (\r\n            <div>\r\n                <Helmet>\r\n                    <title>{TITLE}</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Browse LFMs from any server with a live LFM panel! Check the LFM panel before you login, or setup notifications and never miss raid night again!\"\r\n                    />\r\n                </Helmet>\r\n                <ReportIssueForm\r\n                    page={\"grouping/\" + currentServer.toLowerCase()}\r\n                    showLink={false}\r\n                    visibility={reportFormVisibility}\r\n                    componentReference={reportFormReference}\r\n                    hideReportForm={hideReportForm}\r\n                />\r\n                <PopupMessage\r\n                    messages={popupMessages}\r\n                    popMessage={() => {\r\n                        if (popupMessages.length) {\r\n                            let newMessages = [...popupMessages];\r\n                            newMessages = newMessages.slice(1);\r\n                            set_popupMessages(newMessages);\r\n                        }\r\n                    }}\r\n                />\r\n                <Card\r\n                    pageName={\"grouping/\" + currentServer.toLowerCase()}\r\n                    showLink={false}\r\n                    title={\"Currently on \" + currentServer}\r\n                    className=\"grouping\"\r\n                    hideTitleOnMobile={true}\r\n                    subtitle={\r\n                        groupDataMaster ? (\r\n                            <div className=\"grouping-subtitle\">\r\n                                There {groupCount === 1 ? \"is\" : \"are\"}{\" \"}\r\n                                currently{\" \"}\r\n                                <span className=\"lfm-number\">{groupCount}</span>{\" \"}\r\n                                group{groupCount === 1 ? \"\" : \"s\"} posted.{\" \"}\r\n                                {GetSnarkyMessage()}\r\n                            </div>\r\n                        ) : (\r\n                            <div>Loading group data...</div>\r\n                        )\r\n                    }\r\n                    reportReference={showReportForm}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <LfmFilter\r\n                            currentServer={currentServer}\r\n                            handleFilterButton={() =>\r\n                                set_filterPanelVisible(!filterPanelVisible)\r\n                            }\r\n                        >\r\n                            <div\r\n                                className=\"filter-panel-overlay\"\r\n                                style={{\r\n                                    display: filterPanelVisible\r\n                                        ? \"block\"\r\n                                        : \"none\",\r\n                                }}\r\n                                onClick={() => set_filterPanelVisible(false)}\r\n                            />\r\n                            <div\r\n                                className=\"filter-panel\"\r\n                                style={{\r\n                                    display: filterPanelVisible\r\n                                        ? \"block\"\r\n                                        : \"none\",\r\n                                    padding: \"10px\",\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className=\"filter-panel-group\"\r\n                                    style={{ marginBottom: \"10px\" }}\r\n                                >\r\n                                    <h4>Filter Groups</h4>\r\n                                    <div style={{ padding: \"15px\" }}>\r\n                                        <LevelRangeSlider\r\n                                            handleChange={(e) => {\r\n                                                if (e.length) {\r\n                                                    set_minimumLevel(e[0]);\r\n                                                    set_maximumLevel(e[1]);\r\n                                                    localStorage.setItem(\r\n                                                        \"minimum-level\",\r\n                                                        e[0]\r\n                                                    );\r\n                                                    localStorage.setItem(\r\n                                                        \"maximum-level\",\r\n                                                        e[1]\r\n                                                    );\r\n                                                }\r\n                                            }}\r\n                                            minimumLevel={minimumLevel}\r\n                                            maximumLevel={maximumLevel}\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"left\",\r\n                                            flexDirection: \"column\",\r\n                                            alignItems: \"start\",\r\n                                        }}\r\n                                    >\r\n                                        <label className=\"filter-panel-group-option\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"noteligible\"\r\n                                                type=\"checkbox\"\r\n                                                checked={showNotEligible}\r\n                                                onChange={() => {\r\n                                                    localStorage.setItem(\r\n                                                        \"show-not-eligible\",\r\n                                                        !showNotEligible\r\n                                                    );\r\n                                                    set_showNotEligible(\r\n                                                        !showNotEligible\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                            Show groups I am not eligible for\r\n                                        </label>\r\n                                        <label className=\"filter-panel-group-option\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"setsortorder\"\r\n                                                type=\"checkbox\"\r\n                                                checked={!sortAscending}\r\n                                                onChange={() => {\r\n                                                    localStorage.setItem(\r\n                                                        \"sort-order\",\r\n                                                        !sortAscending\r\n                                                    );\r\n                                                    set_sortAscending(\r\n                                                        !sortAscending\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                            Sort groups ascending\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"filter-panel-group\">\r\n                                    <h4>Accessibility</h4>\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"left\",\r\n                                            flexDirection: \"column\",\r\n                                            alignItems: \"start\",\r\n                                        }}\r\n                                    >\r\n                                        <label className=\"filter-panel-group-option show-on-mobile\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"darktheme\"\r\n                                                type=\"checkbox\"\r\n                                                checked={theme === \"dark-theme\"}\r\n                                                onChange={() => {\r\n                                                    ToggleTheme();\r\n                                                }}\r\n                                            />\r\n                                            Dark theme\r\n                                        </label>\r\n                                        <label className=\"filter-panel-group-option\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"classislook\"\r\n                                                type=\"checkbox\"\r\n                                                checked={classicLook}\r\n                                                onChange={() => {\r\n                                                    localStorage.setItem(\r\n                                                        \"classic-look\",\r\n                                                        !classicLook\r\n                                                    );\r\n                                                    set_classicLook(\r\n                                                        !classicLook\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                            Classic Look (may be difficult to\r\n                                            see on mobile)\r\n                                        </label>\r\n                                        <label className=\"filter-panel-group-option\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"highvis\"\r\n                                                type=\"checkbox\"\r\n                                                checked={highVisibility}\r\n                                                onChange={() => {\r\n                                                    localStorage.setItem(\r\n                                                        \"high-visibility\",\r\n                                                        !highVisibility\r\n                                                    );\r\n                                                    set_highVisibility(\r\n                                                        !highVisibility\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                            High Contrast\r\n                                        </label>\r\n                                        <label className=\"filter-panel-group-option\">\r\n                                            <input\r\n                                                className=\"input-radio\"\r\n                                                name=\"largefont\"\r\n                                                type=\"checkbox\"\r\n                                                checked={fontModifier === 5}\r\n                                                onChange={() => {\r\n                                                    localStorage.setItem(\r\n                                                        \"font-modifier\",\r\n                                                        fontModifier === 0\r\n                                                            ? 5\r\n                                                            : 0\r\n                                                    );\r\n                                                    set_fontModifier(\r\n                                                        fontModifier === 0\r\n                                                            ? 5\r\n                                                            : 0\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n                                            Large Font\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </LfmFilter>\r\n                        {classicLook ? (\r\n                            <CanvasLfmPanel\r\n                                data={groupDataServer}\r\n                                showNotEligible={showNotEligible}\r\n                                adjustedGroupCount={adjustedGroupCount}\r\n                                fontModifier={fontModifier}\r\n                                highVisibility={highVisibility}\r\n                                // showNotEligible={showNotEligible}\r\n                                // sortOrder={sortOrder}\r\n                                // minimumLevel={minimumLevel}\r\n                                // maximumLevel={maximumLevel}\r\n                            ></CanvasLfmPanel>\r\n                        ) : (\r\n                            <div className=\"group-container\">\r\n                                {groupDataServer.data &&\r\n                                    groupDataServer.data.Groups.map(\r\n                                        (group, i) =>\r\n                                            group.Eligible && (\r\n                                                <Group\r\n                                                    key={i}\r\n                                                    handleClick={() => {\r\n                                                        if (IsExpanded(group)) {\r\n                                                            set_expandedGroups(\r\n                                                                expandedGroups.filter(\r\n                                                                    (g) => {\r\n                                                                        return (\r\n                                                                            g\r\n                                                                                .Leader\r\n                                                                                .Name !==\r\n                                                                            group\r\n                                                                                .Leader\r\n                                                                                .Name\r\n                                                                        );\r\n                                                                    }\r\n                                                                )\r\n                                                            );\r\n                                                        } else {\r\n                                                            set_expandedGroups([\r\n                                                                ...expandedGroups,\r\n                                                                group,\r\n                                                            ]);\r\n                                                        }\r\n                                                    }}\r\n                                                    group={group}\r\n                                                    expanded={IsExpanded(group)}\r\n                                                />\r\n                                            )\r\n                                    )}\r\n                                {eligibleCount === 0 && (\r\n                                    <span\r\n                                        style={{\r\n                                            fontSize: \"1.6rem\",\r\n                                            width: \"100%\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        No groups meet your current filter\r\n                                        settings\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default GroupingSpecific;\r\n"],"sourceRoot":""}