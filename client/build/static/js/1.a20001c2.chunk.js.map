{"version":3,"sources":["../node_modules/d3-shape/src/arc.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../src/utils.ts","../../src/arcTransitionMode.ts","../../src/centers.ts","../../src/arc_labels/ArcLabel.tsx","../../src/arc_labels/ArcLabelsLayer.tsx","../../src/arc_link_labels/compute.ts","../../src/arc_link_labels/useArcLinkLabelsTransition.ts","../../src/arc_link_labels/ArcLinkLabel.tsx","../../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../../src/ArcShape.tsx","../../src/interpolateArc.ts","../../src/ArcsLayer.tsx","../../src/useArcsTransition.ts","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../src/useArcGenerator.ts","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/PieLegends.tsx","../../src/PieTooltip.tsx","../../src/props.ts","../../src/hooks.ts","../node_modules/d3-shape/src/pie.js","../../src/boundingBox.ts","../../src/Arcs.tsx","../../src/Pie.tsx","../../src/ResponsivePie.tsx"],"names":["arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","epsilon","cornerTangents","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","constant","padRadius","context","arc","buffer","r0","apply","this","arguments","a0","halfPi","a1","da","abs","path","tau","moveTo","cos","sin","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","p0","asin","p1","oc","pi","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","getNormalizedAngle","angle","normalizedAngle","Math","filterDataBySkipAngle","data","datum","radiansToDegrees","arcTransitionModeById","enter","update","leave","middleAngle","centerRadius","pushIn","pushOut","useArcTransitionMode","useMemo","transitionMode","progress","extraTransition","mode","computeArcCenter","midAngle","radius","positionFromAngle","interpolateArcCenter","offset","to","startAngleValue","endAngleValue","innerRadiusValue","staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","transform","opacity","textAnchor","dominantBaseline","fill","textColor","ArcLabelsLayer","center","labelAccessor","radiusOffset","skipAngle","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","extra","useMotionConfig","animate","springConfig","phases","transition","useTransition","initial","from","config","immediate","interpolate","useArcCentersTransition","Label","transitionProps","computeArcLink","centerAngle","point0","point1","side","point2","x","y","points","lineGenerator","line","interpolateLink","interpolateTextAnchor","computeArcLinkTextAnchor","interpolateTextPosition","position","useArcLinkLabelsTransition","diagonalLength","straightLength","textOffset","linkColor","getLinkColor","filteredData","useFilteredDataBySkipAngle","transitionPhases","useTransitionPhases","ArcLinkLabel","stroke","strokeWidth","ArcLinkLabelsLayer","thickness","textPosition","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","useCallback","event","handleMouseEnter","handleMouseMove","handleMouseLeave","undefined","interpolateArc","arcGenerator","ArcsLayer","borderWidth","borderColor","getBorderColor","useArcsTransition","color","Arc","createElement","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","_toConsumableArray","isArray","arrayWithoutHoles","iter","Symbol","iterator","iterableToArray","unsupportedIterableToArray","TypeError","nonIterableSpread","_slicedToArray","arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","iterableToArrayLimit","nonIterableRest","useArcGenerator","b","NaN","_objectWithoutProperties","excluded","sourceKeys","indexOf","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","PieLegends","width","height","legends","dataWithArc","containerWidth","containerHeight","defaultProps","id","sortByValue","layers","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","isInteractive","motionConfig","tooltip","enableChip","role","pixelRatio","window","useNormalizedData","valueFormat","getId","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","datumId","datumValue","normalizedDatum","formattedValue","usePieArcs","activeId","pie","innerPie","identity","sortValues","descending","sort","j","k","v","sum","index","arcs","p","pa","degreesToRadians","angleDeg","usePieFromBox","innerRadiusRatio","useState","setActiveId","computedProps","centerX","centerY","includeCenter","xs","ys","computeArcBoundingBox","box","ratio","adjustedBox","boundingBox","debug","Arcs","useTooltip","showTooltipFromEvent","hideTooltip","InnerPie","partialMargin","margin","arcLabelsComponent","arcLinkLabelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcLabels","layerContext","usePieLayerContext","layer","Pie","renderWrapper","otherProps","ResponsivePie"],"mappings":"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","file":"static/js/1.a20001c2.chunk.js","sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter = (offset: number) => (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            const centroid = computeArcCenter(\n                { startAngle, endAngle, innerRadius, outerRadius },\n                offset\n            )\n\n            return `translate(${centroid.x},${centroid.y})`\n        }\n    )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import React, { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import React from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    } = useArcLinkLabelsTransition<Datum>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        linkColor,\n        textColor,\n    })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return React.createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import React, { useCallback } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(event => onMouseEnter?.(datum, event), [\n        onMouseEnter,\n        datum,\n    ])\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(event => onMouseLeave?.(datum, event), [\n        onMouseLeave,\n        datum,\n    ])\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import React, { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    dataWithArc: ComputedDatum<RawDatum>[]\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    dataWithArc,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={dataWithArc}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import React from 'react'\nimport { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: ({ scheme: 'nivo' } as unknown) as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { ArcGenerator, useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n}): Omit<ComputedDatum<RawDatum>, 'fill'>[] => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(\n        () =>\n            pie(data).map(\n                (\n                    arc: Omit<\n                        PieArc,\n                        'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                    > & {\n                        data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                    }\n                ) => {\n                    const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                    return {\n                        ...arc.data,\n                        arc: {\n                            index: arc.index,\n                            startAngle: arc.startAngle,\n                            endAngle: arc.endAngle,\n                            innerRadius:\n                                activeId === arc.data.id\n                                    ? innerRadius - activeInnerRadiusOffset\n                                    : innerRadius,\n                            outerRadius:\n                                activeId === arc.data.id\n                                    ? outerRadius + activeOuterRadiusOffset\n                                    : outerRadius,\n                            thickness: outerRadius - innerRadius,\n                            padAngle: arc.padAngle,\n                            angle,\n                            angleDeg: radiansToDegrees(angle),\n                        },\n                    }\n                }\n            ),\n\n        [\n            pie,\n            data,\n            innerRadius,\n            outerRadius,\n            activeId,\n            activeInnerRadiusOffset,\n            activeInnerRadiusOffset,\n        ]\n    )\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { dataWithArc, arcGenerator, setActiveId }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const dataWithArc = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        dataWithArc,\n        arcGenerator,\n        setActiveId,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: {\n    dataWithArc: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    centerX: number\n    centerY: number\n    radius: number\n    innerRadius: number\n}): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter === true) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import React, { createElement, useMemo } from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import React, { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                dataWithArc={dataWithArc}\n                legends={legends}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"],"sourceRoot":""}