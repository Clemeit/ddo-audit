{"version":3,"sources":["components/Who.jsx"],"names":["serverNames","noPlayersMessages","Who","props","React","useState","playerData","set_playerData","playerCount","set_playerCount","useEffect","FetchPlayerData","Fetch","then","val","undefined","Timestamp","set_popupMessages","popupMessages","title","message","icon","fullscreen","reportMessage","JSON","stringify","catch","refreshdata","setInterval","clearInterval","total","Argonnessen","Cannith","Ghallanda","Khyber","Orien","Sarlona","Thelanis","Wayfinder","Hardcore","reportFormVisibility","setReportFormVisibility","reportFormReference","name","content","page","showLink","visibility","componentReference","hideReportForm","messages","popMessage","length","newMessages","slice","pageName","subtitle","className","Math","floor","random","style","fontSize","destination","server","number","word","map","i","key","description","tiles"],"mappings":"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","file":"static/js/12.1bd9678e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Card from \"../components/Card\";\r\nimport ReportIssueForm from \"./ReportIssueForm\";\r\nimport PopupMessage from \"./PopupMessage\";\r\nimport ServerSelectOption from \"./ServerSelectOption\";\r\nimport { Fetch, VerifyLfmData } from \"./DataLoader\";\r\n\r\nconst TITLE = \"DDO Live LFM Viewer\";\r\n\r\nconst serverNames = [\r\n    \"Argonnessen\",\r\n    \"Cannith\",\r\n    \"Ghallanda\",\r\n    \"Khyber\",\r\n    \"Orien\",\r\n    \"Sarlona\",\r\n    \"Thelanis\",\r\n    \"Wayfinder\",\r\n    \"Hardcore\",\r\n];\r\n\r\nconst noPlayersMessages = [\r\n    \"The apocalypse!\",\r\n    \"Maybe they're all anonymous.\",\r\n    \"Everyone got banned.\",\r\n];\r\n\r\nconst Who = (props) => {\r\n    // Data\r\n    var [playerData, set_playerData] = React.useState(null);\r\n    var [playerCount, set_playerCount] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        function FetchPlayerData() {\r\n            Fetch(\"https://www.playeraudit.com/api/playersoverview\", 5000)\r\n                .then((val) => {\r\n                    if (val !== null && val.Timestamp !== undefined) {\r\n                        set_playerData(val);\r\n                    } else {\r\n                        set_popupMessages([\r\n                            ...popupMessages,\r\n                            {\r\n                                title: \"Something went wrong\",\r\n                                message:\r\n                                    \"Pretty descriptive, I know. Try refreshing the page. If the issue continues, please report it.\",\r\n                                icon: \"warning\",\r\n                                fullscreen: false,\r\n                                reportMessage:\r\n                                    JSON.stringify(val) ||\r\n                                    \"Group data returned null\",\r\n                            },\r\n                        ]);\r\n                        set_playerData(null);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    set_popupMessages([\r\n                        ...popupMessages,\r\n                        {\r\n                            title: \"We're stuck on a loading screen\",\r\n                            message:\r\n                                \"This is taking longer than usual. You can refresh the page or report the issue.\",\r\n                            icon: \"warning\",\r\n                            fullscreen: false,\r\n                            reportMessage:\r\n                                \"Could not fetch Day Population data. Timeout\",\r\n                        },\r\n                    ]);\r\n                });\r\n        }\r\n        FetchPlayerData();\r\n\r\n        const refreshdata = setInterval(() => {\r\n            FetchPlayerData();\r\n        }, 60000);\r\n        return () => clearInterval(refreshdata);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (playerData) {\r\n            let total = 0;\r\n            total += playerData.Argonnessen;\r\n            total += playerData.Cannith;\r\n            total += playerData.Ghallanda;\r\n            total += playerData.Khyber;\r\n            total += playerData.Orien;\r\n            total += playerData.Sarlona;\r\n            total += playerData.Thelanis;\r\n            total += playerData.Wayfinder;\r\n            total += playerData.Hardcore;\r\n            set_playerCount(total);\r\n        } else {\r\n            set_playerCount(0);\r\n        }\r\n    }, [playerData]);\r\n\r\n    // Report Form\r\n    var [reportFormVisibility, setReportFormVisibility] =\r\n        React.useState(\"none\");\r\n    var [reportFormReference, setReportFormReference] = React.useState(null);\r\n    function showReportForm(reference) {\r\n        // Grab relevant info from the tile element that's being reported\r\n        let referenceInfo = {\r\n            title: reference.title,\r\n            type: reference.chartType,\r\n            displayType: reference.displayType,\r\n            trendType: reference.trendType,\r\n            showActions: reference.showActions,\r\n            //data: reference.chartData,\r\n        };\r\n        // Show the report form\r\n        setReportFormReference(referenceInfo);\r\n        setReportFormVisibility(\"block\");\r\n    }\r\n    function hideReportForm() {\r\n        setReportFormVisibility(\"none\");\r\n    }\r\n\r\n    // Popup message\r\n    var [popupMessages, set_popupMessages] = React.useState([]);\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{TITLE}</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Browse players from any server with a live Who panel! Are your friends online? Is your guild forming up for a late-night raid? Now you know!\"\r\n                />\r\n            </Helmet>\r\n            <ReportIssueForm\r\n                page=\"who\"\r\n                showLink={false}\r\n                visibility={reportFormVisibility}\r\n                componentReference={reportFormReference}\r\n                hideReportForm={hideReportForm}\r\n            />\r\n            <PopupMessage\r\n                page=\"who\"\r\n                messages={popupMessages}\r\n                popMessage={() => {\r\n                    if (popupMessages.length) {\r\n                        let newMessages = [...popupMessages];\r\n                        newMessages = newMessages.slice(1);\r\n                        set_popupMessages(newMessages);\r\n                    }\r\n                }}\r\n            />\r\n            <Card\r\n                pageName=\"who\"\r\n                showLink={false}\r\n                title=\"Live Who Viewer\"\r\n                subtitle={\r\n                    playerData ? (\r\n                        <div>\r\n                            <div className=\"grouping-subtitle\">\r\n                                There are currently{\" \"}\r\n                                <span className=\"population-number\">\r\n                                    {playerCount}\r\n                                </span>{\" \"}\r\n                                players.{\" \"}\r\n                                {playerCount\r\n                                    ? \"Are you one of them?\"\r\n                                    : noPlayersMessages[\r\n                                          Math.floor(Math.random() * 3)\r\n                                      ]}\r\n                            </div>\r\n                            <div\r\n                                className=\"grouping-subtitle-mobile\"\r\n                                style={{ fontSize: \"larger\" }}\r\n                            >\r\n                                Select a server\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div>Loading player data...</div>\r\n                    )\r\n                }\r\n            >\r\n                {playerData ? (\r\n                    <div>\r\n                        <div className=\"grouping-server-select-container\">\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Argonnessen\"\r\n                                number={playerData.Argonnessen}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Cannith\"\r\n                                number={playerData.Cannith}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Ghallanda\"\r\n                                number={playerData.Ghallanda}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Khyber\"\r\n                                number={playerData.Khyber}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Orien\"\r\n                                number={playerData.Orien}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Sarlona\"\r\n                                number={playerData.Sarlona}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Thelanis\"\r\n                                number={playerData.Thelanis}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Wayfinder\"\r\n                                number={playerData.Wayfinder}\r\n                                word=\"player\"\r\n                            />\r\n                            <ServerSelectOption\r\n                                destination=\"who\"\r\n                                server=\"Hardcore\"\r\n                                number={playerData.Hardcore}\r\n                                word=\"player\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"grouping-server-select-container\">\r\n                        {serverNames.map((server, i) => (\r\n                            <ServerSelectOption key={i} server={server} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Card>\r\n            <Card\r\n                className=\"social-extra-info\"\r\n                pageName=\"grouping\"\r\n                showLink={false}\r\n                title=\"\"\r\n                description=\"\"\r\n                tiles={[\r\n                    {\r\n                        title: \"Live Who Viewer\",\r\n                        content: (\r\n                            <div>\r\n                                <p style={{ fontSize: \"larger\" }}>\r\n                                    Every player on every server, all in one\r\n                                    place. Live.\r\n                                </p>\r\n                                <h4>Accessible. Installable.</h4>\r\n                                <p>Visited us on mobile yet? Try it out!</p>\r\n                                <p>\r\n                                    You can now install DDO Audit on your mobile\r\n                                    device. Quickly browse online player, check\r\n                                    if your friends are online, and experience a\r\n                                    whole new way to view the Who panel!\r\n                                </p>\r\n                                <hr />\r\n                                <h4>API</h4>\r\n                                <p>\r\n                                    Need the data for a project of your own?\r\n                                    Visit the API page for more information!\r\n                                </p>\r\n                            </div>\r\n                        ),\r\n                    },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Who;\r\n"],"sourceRoot":""}